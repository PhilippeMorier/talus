# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

aliases:
  # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/node/images
  - &use_docker_node
    docker:
      - image: circleci/node:12.3.1-stretch

  - &use_docker_node_browsers
    docker:
      - image: circleci/node:12.3.1-stretch-browsers

  - &workspace ~/talus

  - &set_working_directory
    working_directory: *workspace

  - &attach_workspace
    attach_workspace:
      at: *workspace

  - &store_test_results
    store_test_results:
      path: ./projects/editor/reports/test-results

version: 2

jobs:
  'dependencies':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - checkout

      # Download and cache dependencies
      # https://circleci.com/docs/2.0/caching/#yarn-node
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: .
          paths: .

  'linting':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run linting
          command: yarn lint --format=stylish

  'prettier':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run prettier
          command: |
            yarn prettier --check \
            --config ./.prettierrc \
            --ignore-path ./.prettierignore '{*,\.circleci/**/*,projects/**/*}.{ts,scss,json,html,yml}'

  'unit':
    <<: *use_docker_node_browsers

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run unit tests
          command: yarn test:editor:ci

      - *store_test_results

      - store_artifacts:
          path: ./projects/editor/reports
          destination: editor/reports

  'benchmark':
    <<: *use_docker_node_browsers

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run benchmarks
          command: yarn benchmark:editor:ci

      - *store_test_results

  'build':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Build app
          command: yarn build editor --prod=true --base-href BASE_PATH_PLACEHOLDER --progress=false

      - run:
          name: Create index files
          command: |
            cd ./dist/editor

            cp index.html index-github.html

            echo 'export BASE_PATH_CIRCLE_CI="https:\/\/$CIRCLE_BUILD_NUM-143906444-gh.circle-artifacts.com\/$CIRCLE_NODE_INDEX\/editor\/dist\/"' >> $BASH_ENV
            echo 'export BASE_PATH_GITHUB="https:\/\/philippemorier.github.io\/talus\/editor\/$CIRCLE_BRANCH\/$CIRCLE_BUILD_NUM\/"' >> $BASH_ENV

            echo 'export REPLACE_CIRCLE_CI="s/BASE_PATH_PLACEHOLDER/$BASE_PATH_CIRCLE_CI/g"' >> $BASH_ENV
            echo 'export REPLACE_GITHUB="s/BASE_PATH_PLACEHOLDER/$BASE_PATH_GITHUB/g"' >> $BASH_ENV

      # Variable interpolation doesn't work on multi-line command
      - run:
          name: Replace 'BASE_PATH_PLACEHOLDER' for CircleCI index
          command: cd ./dist/editor && sed -i "$REPLACE_CIRCLE_CI" index.html

      - run:
          name: Replace 'BASE_PATH_PLACEHOLDER' for Github index
          command: cd ./dist/editor && sed -i "$REPLACE_GITHUB" index-github.html

      - store_artifacts:
          path: ./dist/editor
          destination: editor/dist

      - persist_to_workspace:
          root: .
          paths: dist/editor

  # https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
  'deploy':
    <<: *use_docker_node
    <<: *set_working_directory
    steps:
      - *attach_workspace

      - run:
          name: Configure Git user
          command: |
            git config user.email 'morier.dev@outlook.com'
            git config user.name 'Circle CI'

      - add_ssh_keys:
          fingerprints:
            - '6b:2b:a3:64:1d:a3:5c:b6:03:7a:b7:b9:39:10:8f:43'

      - run:
          name: Add github.com to known hosts
          command: echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' >> ~/.ssh/known_hosts

      - run:
          name: Delete CircleCI index
          command: rm dist/editor/index.html

      - run:
          name: Rename Github index
          command: mv dist/editor/index-github.html dist/editor/index.html

      - run:
          name: Prepare deployment variables
          command: |
            echo 'export COMMIT_MESSAGE="[skip ci] Deploy: editor (#$CIRCLE_PREVIOUS_BUILD_NUM)"' >> $BASH_ENV
            echo 'export DEST_PATH="editor/$CIRCLE_BRANCH/$CIRCLE_PREVIOUS_BUILD_NUM"' >> $BASH_ENV

      - run:
          name: Deploy to Github pages
          command: |
            yarn gh-pages \
            --dotfiles \
            --message "$COMMIT_MESSAGE" \
            --dist dist/editor \
            --dest "$DEST_PATH"

workflows:
  version: 2
  'editor':
    jobs:
      - 'dependencies'

      #      - 'linting':
      #          requires:
      #            - 'dependencies'
      #
      #      - 'prettier':
      #          requires:
      #            - 'dependencies'
      #
      #      - 'unit':
      #          requires:
      #            - 'linting'
      #            - 'prettier'
      #
      #      - 'benchmark':
      #          requires:
      #            - 'linting'
      #            - 'prettier'

      - 'build':
          requires:
            - 'dependencies'

      - 'deploy':
          requires:
            - 'build'
          filters:
            branches:
              only: master
