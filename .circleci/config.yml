# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

aliases:
  # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/node/images
  - &use_docker_node
    docker:
      - image: circleci/node:12.3.1-stretch

  - &use_docker_node_browsers
    docker:
      - image: circleci/node:12.3.1-stretch-browsers

  - &workspace ~/talus

  - &set_working_directory
    working_directory: *workspace

  - &attach_workspace
    attach_workspace:
      at: *workspace

  - &store_test_results
    store_test_results:
      path: ./projects/editor/reports/test-results

version: 2
jobs:
  'dependencies':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - checkout

      # Download and cache dependencies
      # https://circleci.com/docs/2.0/caching/#yarn-node
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run: yarn install

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: .
          paths: .

  'linting':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn lint --format=stylish

  'prettier':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn prettier --check --config ./.prettierrc --ignore-path ./.prettierignore  '{*,\.circleci/**/*,projects/**/*}.{ts,scss,json,html,yml}'

  'unit':
    <<: *use_docker_node_browsers

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn test:editor:ci

      - *store_test_results

      - store_artifacts:
          path: ./projects/editor/reports
          destination: editor/reports

  'benchmark':
    <<: *use_docker_node_browsers

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn benchmark:editor:ci

      - *store_test_results

  'build `editor`':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn build editor --prod=true --base-href BASE_PATH_PLACEHOLDER --progress=false

      - run:
          name: Create index files
          command: |
            cd ./dist/editor

            cp index.html index-circle-ci.html
            cp index.html index-github.html

            echo 'export BASE_PATH_CIRCLE_CI="https:\/\/$CIRCLE_BUILD_NUM-143906444-gh.circle-artifacts.com\/$CIRCLE_NODE_INDEX\/editor\/dist\/"' >> $BASH_ENV
            echo 'export BASE_PATH_GITHUB="https:\/\/philippemorier.github.io\/talus\/"' >> $BASH_ENV

            echo 'export REPLACE_CIRCLE_CI="s/BASE_PATH_PLACEHOLDER/$BASE_PATH_CIRCLE_CI/g"' >> $BASH_ENV
            echo 'export REPLACE_GITHUB="s/BASE_PATH_PLACEHOLDER/$BASE_PATH_GITHUB/g"' >> $BASH_ENV

      # Variable interpolation doesn't work on multi-line command
      - run: cd ./dist/editor && sed -i "$REPLACE_CIRCLE_CI" index-circle-ci.html
      - run: cd ./dist/editor && sed -i "$REPLACE_GITHUB" index-github.html

      - store_artifacts:
          path: ./dist/editor
          destination: editor/dist

      - persist_to_workspace:
          root: .
          paths: dist/editor

  # https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
  'deploy `editor`':
    <<: *use_docker_node
    <<: *set_working_directory
    steps:
      - *attach_workspace
      - run:
          name: Config Git user
          command: |
            git config user.email 'morier.dev@outlook.com'
            git config user.name 'Circle CI'
      - add_ssh_keys:
          fingerprints:
            - 'e3:ad:b1:61:b5:f8:ea:7d:28:82:e1:89:9b:35:3f:e6'
      - run:
          name: Deploy to Github pages
          command: yarn gh-pages --dotfiles --message '[skip ci] Updates' --dist dist/editor

workflows:
  version: 2
  'Editor':
    jobs:
      - 'dependencies'

#      - 'linting':
#          requires:
#            - 'dependencies'
#
#      - 'prettier':
#          requires:
#            - 'dependencies'
#
#      - 'unit':
#          requires:
#            - 'linting'
#            - 'prettier'
#
#      - 'benchmark':
#          requires:
#            - 'linting'
#            - 'prettier'

      - 'build `editor`':
          requires:
            - 'dependencies'

      - 'deploy `editor`':
          requires:
            - 'build `editor`'
          filters:
            branches:
              only: master
