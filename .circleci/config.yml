# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

aliases:
  # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/node/images
  - &use_docker_node
    docker:
      - image: circleci/node:12.3.1-stretch

  - &use_docker_node_browsers
    docker:
      - image: circleci/node:12.3.1-stretch-browsers

  - &workspace ~/talus

  - &set_working_directory
    working_directory: *workspace

  - &attach_workspace
    attach_workspace:
      at: *workspace

version: 2
jobs:
  'install dependencies':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - checkout

      # Download and cache dependencies
      # https://circleci.com/docs/2.0/caching/#yarn-node
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run: yarn install

      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: .
          paths: .

  'linting':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn lint --format=stylish

  'prettier':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn prettier --check --config ./.prettierrc --ignore-path ./.prettierignore  "{*,projects/**/*}.{ts,scss,json,html,yml}"

  'Unit test':
    <<: *use_docker_node_browsers

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run: yarn test:editor:ci

      - store_test_results:
          path: ./projects/editor/reports/test-results

      - store_artifacts:
          path: ./projects/editor/reports
          destination: editor

workflows:
  version: 2
  'Editor':
    jobs:
      - 'install dependencies'

      - 'linting':
          requires:
            - 'install dependencies'

      - 'prettier':
          requires:
            - 'install dependencies'

      - 'Unit test':
          requires:
            - 'linting'
            - 'prettier'
