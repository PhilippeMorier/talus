# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#

aliases:
  # https://github.com/CircleCI-Public/circleci-dockerfiles/tree/master/node/images
  - &use_docker_node
    docker:
      - image: circleci/node:13.7.0-stretch

  - &use_docker_node_browsers
    docker:
      - image: circleci/node:13.7.0-stretch-browsers

  # https://github.com/cypress-io/cypress-docker-images/tree/master/included
  - &use_docker_cypress_included
    docker:
      - image: cypress/included:4.0.1

  - &workspace ~/talus

  - &set_working_directory
    working_directory: *workspace

  - &attach_workspace
    attach_workspace:
      at: *workspace

  - &configure_git_user
    run:
      name: Configure Git user
      command: |
        git config user.email 'morier.dev@outlook.com'
        git config user.name 'Circle CI'

  - &add_github_ssh_key
    add_ssh_keys:
      fingerprints:
        - '6b:2b:a3:64:1d:a3:5c:b6:03:7a:b7:b9:39:10:8f:43'

  - &add_github_to_known_hosts
    run:
      name: Add github.com to known hosts
      command:
        echo 'github.com ssh-rsa
        AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
        >> ~/.ssh/known_hosts

  - &prepare_github_pages_variables
    run:
      name: Prepare github pages variables
      command: |
        echo 'export LAST_COMMIT_HASH_SHORT=$(echo $CIRCLE_SHA1 | cut -c1-7)' >> $BASH_ENV

        echo 'export COMMIT_MESSAGE="[skip ci] Deploy: $DEPLOY_CONTEXT (#$LAST_COMMIT_HASH_SHORT)"' >> $BASH_ENV
        echo 'export DIST_PATH="dist/$DEPLOY_CONTEXT"' >> $BASH_ENV
        echo 'export DEST_PATH="$CIRCLE_BRANCH/$LAST_COMMIT_HASH_SHORT/$DEPLOY_CONTEXT"' >> $BASH_ENV

  - &deploy_to_github_pages
    run:
      name: Deploy to Github pages
      command: |
        git branch --set-upstream-to=origin/${CIRCLE_BRANCH} ${CIRCLE_BRANCH}
        git fetch origin gh-pages:gh-pages
        git pull
        yarn gh-pages \
        --dotfiles \
        --message "$COMMIT_MESSAGE" \
        --dist "$DIST_PATH" \
        --dest "$DEST_PATH"

  - &log_deploy_url
    run:
      name: Log deploy URL
      command: echo 'https://philippemorier.github.io/talus/'$DEST_PATH'/'$PROJECT_NAME'/'

  - &store_test_results
    store_test_results:
      path: ./test-results

version: 2

jobs:
  'dependencies':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - checkout

      # Download and cache dependencies
      # https://circleci.com/docs/2.0/caching/#yarn-node
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: .
          paths: .

  'linting':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run linting
          command: yarn lint

  'prettier':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run prettier
          command: yarn prettier:check

  'unit':
    <<: *use_docker_node_browsers

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run unit tests
          command: yarn nx test --code-coverage

      - *store_test_results

      - store_artifacts:
          path: ./coverage
          destination: coverage

  'benchmark':
    <<: *use_docker_node_browsers

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Build benchmarks
          # add `--maxWorkers=10` to avoid following two errors:
          # 1. Too long with no output (exceeded 10m0s): context deadline exceeded
          # 2. Killed
          #    error Command failed with exit code 137.
          command: yarn nx build benchmark --maxWorkers=10

      - run:
          name: Run benchmarks
          command: node ./dist/apps/benchmark/main.js

      - *store_test_results

  'frontend e2e':
    <<: *use_docker_cypress_included

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run frontend-e2e
          command: yarn nx e2e frontend-e2e --headless

      - *store_test_results

      - store_artifacts:
          path: ./test-results/cypress
          destination: cypress

  'ui e2e':
    <<: *use_docker_cypress_included

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Run ui-e2e
          command: yarn nx e2e ui-e2e --headless

      - *store_test_results

      - store_artifacts:
          path: ./test-results/cypress
          destination: cypress

  'frontend build':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Build app
          command:
            yarn nx build frontend --prod=true --base-href=BASE_PATH_PLACEHOLDER --progress=false

      - run:
          name: Create index files
          command: |
            cd ./dist/apps/frontend

            cp index.html index-github.html

            echo 'export LAST_COMMIT_HASH_SHORT=$(echo $CIRCLE_SHA1 | cut -c1-7)' >> $BASH_ENV

            echo 'export BASE_PATH_CIRCLE_CI="https:\/\/$CIRCLE_BUILD_NUM-143906444-gh.circle-artifacts.com\/$CIRCLE_NODE_INDEX\/dist\/apps\/frontend\/"' >> $BASH_ENV
            echo 'export BASE_PATH_GITHUB="https:\/\/philippemorier.github.io\/talus\/$CIRCLE_BRANCH\/$LAST_COMMIT_HASH_SHORT\/apps\/frontend\/"' >> $BASH_ENV

            echo 'export REPLACE_CIRCLE_CI="s/BASE_PATH_PLACEHOLDER/$BASE_PATH_CIRCLE_CI/g"' >> $BASH_ENV
            echo 'export REPLACE_GITHUB="s/BASE_PATH_PLACEHOLDER/$BASE_PATH_GITHUB/g"' >> $BASH_ENV

      # Variable interpolation doesn't work on multi-line command
      - run:
          name: Replace 'BASE_PATH_PLACEHOLDER' for CircleCI index
          command: cd ./dist/apps/frontend && sed -i "$REPLACE_CIRCLE_CI" index.html

      - run:
          name: Replace 'BASE_PATH_PLACEHOLDER' for Github index
          command: cd ./dist/apps/frontend && sed -i "$REPLACE_GITHUB" index-github.html

      - store_artifacts:
          path: ./dist/apps/frontend
          destination: dist/apps/frontend

      - persist_to_workspace:
          root: .
          paths: dist/apps/frontend

  'ui build':
    <<: *use_docker_node

    <<: *set_working_directory

    steps:
      - *attach_workspace

      - run:
          name: Build storybook
          command: yarn nx run ui:build-storybook

      - store_artifacts:
          path: ./dist/storybook/ui
          destination: dist/storybook/ui

      - persist_to_workspace:
          root: .
          paths: dist/storybook/ui

  # https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
  'frontend deploy':
    <<: *use_docker_node
    <<: *set_working_directory
    steps:
      - *attach_workspace

      - *configure_git_user

      - *add_github_ssh_key

      - *add_github_to_known_hosts

      - run:
          name: Delete CircleCI index
          command: rm dist/apps/frontend/index.html

      - run:
          name: Rename Github index
          command: mv dist/apps/frontend/index-github.html dist/apps/frontend/index.html

      - run:
          name: Set deploy context & project variables
          command: |
            echo 'export DEPLOY_CONTEXT="apps"' >> $BASH_ENV
            echo 'export PROJECT_NAME="frontend"' >> $BASH_ENV

      - *prepare_github_pages_variables

      - *deploy_to_github_pages

      - *log_deploy_url

  'ui deploy':
    <<: *use_docker_node
    <<: *set_working_directory
    steps:
      - *attach_workspace

      - *configure_git_user

      - *add_github_ssh_key

      - *add_github_to_known_hosts

      - run:
          name: Set deploy context & project variables
          command: |
            echo 'export DEPLOY_CONTEXT="storybook"' >> $BASH_ENV
            echo 'export PROJECT_NAME="ui"' >> $BASH_ENV

      - *prepare_github_pages_variables

      - *deploy_to_github_pages

      - *log_deploy_url

workflows:
  version: 2
  'apps':
    jobs:
      - 'dependencies'

      - 'linting':
          requires:
            - 'dependencies'

      - 'prettier':
          requires:
            - 'dependencies'

      - 'unit':
          requires:
            - 'dependencies'

      - 'benchmark':
          requires:
            - 'dependencies'

      - 'frontend build':
          requires:
            - 'linting'
            - 'prettier'
            - 'unit'
            - 'benchmark'

      - 'frontend e2e':
          requires:
            - 'linting'
            - 'prettier'
            - 'unit'
            - 'benchmark'

      - 'ui build':
          requires:
            - 'linting'
            - 'prettier'
            - 'unit'
            - 'benchmark'

      - 'ui e2e':
          requires:
            - 'linting'
            - 'prettier'
            - 'unit'
            - 'benchmark'

      - 'frontend deploy':
          requires:
            - 'frontend build'
            - 'frontend e2e'
          filters:
            branches:
              only:
                - master
                - develop

      - 'ui deploy':
          requires:
            - 'ui build'
            - 'ui e2e'
          filters:
            branches:
              only:
                - master
                - develop
